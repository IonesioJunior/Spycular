[tool.poetry]
name = "spycular"
version = "0.1.0"
description = "Spycular offers an innovative way to use Python libraries remotely through RPC. Inspired by the idea of specular reflection, it provides unparalleled flexibility, allowing you to customize the communication protocol, serialization method, and even the way objects are managed and stored on the remote side."
authors = ["Ionesio Junior <ionesiojr@gmail.com>"]
readme = "README.md"
license = "Apache-2.0"
homepage = "https://github.com/IonesioJunior/Spycular"
repository = "https://github.com/IonesioJunior/Spycular"
documentation = "https://ionesiojunior.github.io/Spycular/"



[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.2.0"
cython = { version = "^3.0.0", optional = true }
numpy = { version = "^1.24", optional = true }
pyarrow = { version = "^11.0.0", optional = true }
pycapnp= { version = "^1.3.0", optional = true }
torch= {version = ">=2.0.0, !=2.0.1", optional = true }
websockets = {version = "^11.0.3", optional = true }
websocket = {version = "^0.2.1", optional = true }


[tool.poetry.extras]
test = ["pytest", "pytest-cov", "pytest-env"]
numpy = ['pyarrow', 'numpy']
torch = ['pyarrow', 'numpy', 'torch']
capnp = ['pycapnp']
cython = ['cython']
websocket = ['websockets', 'websocket']

[tool.poetry.scripts]
start_tst_server = "scripts.test_server:start_server"
stop_tst_server = "scripts.test_server:stop"

[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
flake8 = "^6.1.0"
isort = "^5.12.0"
pre-commit = "^3.3.3"
mypy = "^1.5.1"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-env = "^0.8.2"
autoflake = "^2.2.0"
docformatter = "^1.7.5"
mkdocs = "^1.5.2"
mkdocs-material = "^9.2.3"
mkdocs-material-extensions = "^1.1.1"
mkdocstrings = "^0.22.0"
mkdocstrings-python = "^1.5.1"
mkdocs-autorefs = "^0.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
ignore_missing_imports = true

[tool.black]
line-length = 79

[tool.isort]
profile = "black"
line_length = 79
